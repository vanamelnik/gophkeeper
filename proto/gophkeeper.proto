/*
    GophKeeper protobuf definitions
*/
syntax="proto3";

package proto;
option go_package="./proto";

import "google/protobuf/empty.proto";

service gophkeeper {
    // SignUp registers a new user.
    rpc SignUp(SignInData) returns (UserAuth);
    // LogIn creates a new session for the user provided.
    rpc LogIn(SignInData) returns (UserAuth);
    // GetNewTokens generates a new AccessToken + RefreshToken pair.
    rpc GetNewTokens(RefreshToken) returns (UserAuth);
    // TODO:
    // ChangePassword
    // DeleteUser
    // LogoutAllSessions - выйти отовсюду для данного пользователя

    // ProcessEvents applies the changes to the storage on the server.
    // This method is allowed only if the version of user's data on the client side is equal
    // to the version number on the server. Otherwise the error is returned and the client 
    // must first update data from the server.
    rpc ProcessEvents(ProcessEventsRequest) returns (google.protobuf.Empty);

    // UpdateData downloads latest snapshot of the user's data from the server.
    // If data_version field equals to version of the data on the server, the error "already
    // up to date" is thrown.
    rpc UpdateData(UpdateDataRequest) returns (Data);
}

message Password {
    ItemID item_id = 1;
    Metadata meta = 2;

    string password = 3;
}

message Blob {
    ItemID item_id = 1;
    Metadata meta = 2;

    bytes data = 3;
}

message Text {
    ItemID item_id = 1;
    Metadata meta = 2;

    string text = 3;
}

message Card {
    ItemID item_id = 1;
    Metadata meta = 2;

    string number = 3;
    string name = 4;
    string date = 5;
    uint32 cvc = 6;
}

message Data {
    repeated Password passwords = 1;
    repeated Blob blobs = 2;
    repeated Text texts = 3;
    repeated Card cards = 4;
    uint64 version = 100;
}

// Metadata is JSON string with metadata key:value pairs.
message Metadata {
    string metadata = 1;
}

message ItemID {
    string item_id = 1;
}

message UserAuth {
    AccessToken access_token = 1;
    RefreshToken  refresh_token = 2;
}

message AccessToken {
    string access_token = 1;
}

message RefreshToken {
    string refresh_token = 1;
}

message SignInData {
    string user_name = 1;
    string user_password = 2;
}

message Event {
    enum Operation {
        CREATE = 0;
        UPDATE = 1;
        DELETE = 2;
    }
    Operation operation = 1;
    oneof item {
        Password password = 2;
        Blob blob = 3;
        Text text = 4;
        Card card = 5;
    }
}

message UpdateDataRequest {
    AccessToken token = 1;
    uint64 data_version = 2;
}

message ProcessEventsRequest {
    AccessToken token = 1;
    uint64 data_version = 2;
    repeated Event events = 3;
}