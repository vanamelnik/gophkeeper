/*
    GophKeeper protobuf definitions
*/
syntax="proto3";

package proto;
option go_package="./proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service gophkeeper {
    rpc SignUp(SignInData) returns (UserAuth);
    rpc LogIn(SignInData) returns (UserAuth);
    rpc GetNewTokens(RefreshToken) returns (UserAuth);
    // TODO:
    // ChangePassword
    // DeleteUser
    // LogoutAllSessions - выйти отовсюду для данного пользователя

    rpc RegisterEvent(RegisterEventRequest) returns (google.protobuf.Empty);
    rpc UpdateData(UpdateDataRequest) returns (Data);
}

message Password {
    ItemID item_id = 1;
    repeated MetaData meta = 2;

    string password = 3;
}

message Blob {
    ItemID item_id = 1;
    repeated MetaData meta = 2;

    bytes data = 3;
}

message Text {
    ItemID item_id = 1;
    repeated MetaData meta = 2;

    string text = 3;
}

message Card {
    ItemID item_id = 1;
    repeated MetaData meta = 2;

    string number = 3;
    string name = 4;
    string date = 5;
    uint32 cvc = 6;
}

message Data {
    repeated Password passwords = 1;
    repeated Blob blobs = 2;
    repeated Text texts = 3;
    repeated Card cards = 4;
    uint64 version = 100;
}

message MetaData {
    string key = 1;
    string value = 2;
}

message ItemID {
    string item_id = 1;
}

message UserAuth {
    AccessToken access_token = 1;
    RefreshToken  refresh_token = 2;
}

message AccessToken {
    string access_token = 1;
}

message RefreshToken {
    string refresh_token = 1;
}

message SignInData {
    string user_name = 1;
    string user_password = 2;
}

message Event {
    enum Operation {
        CREATE = 0;
        UPDATE = 1;
        DELETE = 2;
    }
    google.protobuf.Timestamp timestamp = 1;
    Operation operation = 2;
    oneof item {
        Password password = 3;
        Blob blob = 4;
        Text text = 5;
        Card card = 6;
    }
}

message UpdateDataRequest {
    AccessToken token = 1;
    uint64 version = 2;
}

message RegisterEventRequest {
    AccessToken token = 1;
    Event event = 2;
}